Terminals which are not used

   RESERVED


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: PACKAGE ID SEMICOLON DECLARATION

    2 DECLARATION: DECLARATION VAR_DECLARATION SEMICOLON
    3            | DECLARATION FUNC_DECLARATION SEMICOLON
    4            | /* empty */

    5 VAR_DECLARATION: VAR VAR_SPEC
    6                | VAR LPAR VAR_SPEC SEMICOLON RPAR

    7 VAR_SPEC: VS_CONT TYPE

    8 VS_CONT: VS_CONT_CONT ID

    9 VS_CONT_CONT: VS_CONT_CONT ID COMMA
   10             | /* empty */

   11 TYPE: INT
   12     | FLOAT32
   13     | BOOL
   14     | STRNG

   15 FUNC_DECLARATION: FUNC ID LPAR PARAMETERS RPAR FD_CONT FUNC_BODY

   16 FD_CONT: TYPE
   17        | /* empty */

   18 PARAMETERS: P_CONT ID TYPE
   19           | /* empty */

   20 P_CONT: P_CONT ID TYPE COMMA
   21       | /* empty */

   22 FUNC_BODY: LBRACE VARS_AND_STATEMENTS RBRACE

   23 VARS_AND_STATEMENTS: VARS_AND_STATEMENTS VAS_CONT SEMICOLON
   24                    | /* empty */

   25 VAS_CONT: VAR_DECLARATION
   26         | STATEMENT
   27         | /* empty */

   28 STATEMENT: ID ASSIGN EXPR
   29          | LBRACE ST_CONT RBRACE
   30          | IF EXPR LBRACE ST_CONT RBRACE ST2_CONT
   31          | FOR MAYBE_EXPR LBRACE ST_CONT RBRACE
   32          | RETURN MAYBE_EXPR
   33          | FUNC_INVOCATION
   34          | ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ EXPR RSQ RPAR
   35          | ID COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR
   36          | PRINT LPAR ST3_CONT RPAR
   37          | error

   38 ST_CONT: ST_CONT STATEMENT SEMICOLON
   39        | /* empty */

   40 ST2_CONT: ELSE LBRACE ST_CONT RBRACE
   41         | /* empty */

   42 ST3_CONT: EXPR
   43         | STRLT

   44 MAYBE_EXPR: EXPR
   45           | /* empty */

   46 FUNC_INVOCATION: ID LPAR MAYBE_EXPRS RPAR
   47                | ID LPAR error RPAR

   48 MAYBE_EXPRS: MORE_EXPRS EXPR
   49            | /* empty */

   50 MORE_EXPRS: MORE_EXPRS EXPR COMMA
   51           | /* empty */

   52 EXPR: EXPR OR EXPR
   53     | EXPR LT EXPR
   54     | EXPR GT EXPR
   55     | EXPR EQ EXPR
   56     | EXPR NE EXPR
   57     | EXPR LE EXPR
   58     | EXPR GE EXPR
   59     | EXPR AND EXPR
   60     | EXPR PLUS EXPR
   61     | EXPR MINUS EXPR
   62     | EXPR STAR EXPR
   63     | EXPR DIV EXPR
   64     | EXPR MOD EXPR
   65     | MINUS EXPR
   66     | PLUS EXPR
   67     | NOT EXPR
   68     | INTLIT
   69     | REALLIT
   70     | ID
   71     | FUNC_INVOCATION
   72     | LPAR EXPR RPAR
   73     | LPAR error RPAR


Terminals, with rules where they appear

$end (0) 0
error (256) 35 37 47 73
RETURN (258) 32
RESERVED (259)
PACKAGE (260) 1
FOR (261) 31
FUNC (262) 15
IF (263) 30
ELSE (264) 40
VAR (265) 5 6
INT (266) 11
FLOAT32 (267) 12
BOOL (268) 13
STRNG (269) 14
PRINT (270) 36
PARSEINT (271) 34 35
CMDARGS (272) 34
COMMA (273) 9 20 34 35 50
BLANKID (274) 34 35
SEMICOLON (275) 1 2 3 6 23 38
ASSIGN (276) 28 34 35
STAR (277) 62
DIV (278) 63
MINUS (279) 61 65
PLUS (280) 60 66
EQ (281) 55
GE (282) 58
GT (283) 54
LE (284) 57
LT (285) 53
LBRACE (286) 22 29 30 31 40
RBRACE (287) 22 29 30 31 40
LSQ (288) 34
RSQ (289) 34
LPAR (290) 6 15 34 35 36 46 47 72 73
RPAR (291) 6 15 34 35 36 46 47 72 73
MOD (292) 64
NE (293) 56
NOT (294) 67
AND (295) 59
OR (296) 52
REALLIT (297) 69
INTLIT (298) 68
ID (299) 1 8 9 15 18 20 28 34 35 46 47 70
STRLT (300) 43
UNARY (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
PROGRAM (48)
    on left: 1, on right: 0
DECLARATION (49)
    on left: 2 3 4, on right: 1 2 3
VAR_DECLARATION (50)
    on left: 5 6, on right: 2 25
VAR_SPEC (51)
    on left: 7, on right: 5 6
VS_CONT (52)
    on left: 8, on right: 7
VS_CONT_CONT (53)
    on left: 9 10, on right: 8 9
TYPE (54)
    on left: 11 12 13 14, on right: 7 16 18 20
FUNC_DECLARATION (55)
    on left: 15, on right: 3
FD_CONT (56)
    on left: 16 17, on right: 15
PARAMETERS (57)
    on left: 18 19, on right: 15
P_CONT (58)
    on left: 20 21, on right: 18 20
FUNC_BODY (59)
    on left: 22, on right: 15
VARS_AND_STATEMENTS (60)
    on left: 23 24, on right: 22 23
VAS_CONT (61)
    on left: 25 26 27, on right: 23
STATEMENT (62)
    on left: 28 29 30 31 32 33 34 35 36 37, on right: 26 38
ST_CONT (63)
    on left: 38 39, on right: 29 30 31 38 40
ST2_CONT (64)
    on left: 40 41, on right: 30
ST3_CONT (65)
    on left: 42 43, on right: 36
MAYBE_EXPR (66)
    on left: 44 45, on right: 31 32
FUNC_INVOCATION (67)
    on left: 46 47, on right: 33 71
MAYBE_EXPRS (68)
    on left: 48 49, on right: 46
MORE_EXPRS (69)
    on left: 50 51, on right: 48 50
EXPR (70)
    on left: 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69
    70 71 72 73, on right: 28 30 34 42 44 48 50 52 53 54 55 56 57 58
    59 60 61 62 63 64 65 66 67 72


state 0

    0 $accept: . PROGRAM $end

    PACKAGE  shift, and go to state 1

    PROGRAM  go to state 2


state 1

    1 PROGRAM: PACKAGE . ID SEMICOLON DECLARATION

    ID  shift, and go to state 3


state 2

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 4


state 3

    1 PROGRAM: PACKAGE ID . SEMICOLON DECLARATION

    SEMICOLON  shift, and go to state 5


state 4

    0 $accept: PROGRAM $end .

    $default  accept


state 5

    1 PROGRAM: PACKAGE ID SEMICOLON . DECLARATION

    $default  reduce using rule 4 (DECLARATION)

    DECLARATION  go to state 6


state 6

    1 PROGRAM: PACKAGE ID SEMICOLON DECLARATION .
    2 DECLARATION: DECLARATION . VAR_DECLARATION SEMICOLON
    3            | DECLARATION . FUNC_DECLARATION SEMICOLON

    FUNC  shift, and go to state 7
    VAR   shift, and go to state 8

    $default  reduce using rule 1 (PROGRAM)

    VAR_DECLARATION   go to state 9
    FUNC_DECLARATION  go to state 10


state 7

   15 FUNC_DECLARATION: FUNC . ID LPAR PARAMETERS RPAR FD_CONT FUNC_BODY

    ID  shift, and go to state 11


state 8

    5 VAR_DECLARATION: VAR . VAR_SPEC
    6                | VAR . LPAR VAR_SPEC SEMICOLON RPAR

    LPAR  shift, and go to state 12

    $default  reduce using rule 10 (VS_CONT_CONT)

    VAR_SPEC      go to state 13
    VS_CONT       go to state 14
    VS_CONT_CONT  go to state 15


state 9

    2 DECLARATION: DECLARATION VAR_DECLARATION . SEMICOLON

    SEMICOLON  shift, and go to state 16


state 10

    3 DECLARATION: DECLARATION FUNC_DECLARATION . SEMICOLON

    SEMICOLON  shift, and go to state 17


state 11

   15 FUNC_DECLARATION: FUNC ID . LPAR PARAMETERS RPAR FD_CONT FUNC_BODY

    LPAR  shift, and go to state 18


state 12

    6 VAR_DECLARATION: VAR LPAR . VAR_SPEC SEMICOLON RPAR

    $default  reduce using rule 10 (VS_CONT_CONT)

    VAR_SPEC      go to state 19
    VS_CONT       go to state 14
    VS_CONT_CONT  go to state 15


state 13

    5 VAR_DECLARATION: VAR VAR_SPEC .

    $default  reduce using rule 5 (VAR_DECLARATION)


state 14

    7 VAR_SPEC: VS_CONT . TYPE

    INT      shift, and go to state 20
    FLOAT32  shift, and go to state 21
    BOOL     shift, and go to state 22
    STRNG    shift, and go to state 23

    TYPE  go to state 24


state 15

    8 VS_CONT: VS_CONT_CONT . ID
    9 VS_CONT_CONT: VS_CONT_CONT . ID COMMA

    ID  shift, and go to state 25


state 16

    2 DECLARATION: DECLARATION VAR_DECLARATION SEMICOLON .

    $default  reduce using rule 2 (DECLARATION)


state 17

    3 DECLARATION: DECLARATION FUNC_DECLARATION SEMICOLON .

    $default  reduce using rule 3 (DECLARATION)


state 18

   15 FUNC_DECLARATION: FUNC ID LPAR . PARAMETERS RPAR FD_CONT FUNC_BODY

    ID        reduce using rule 21 (P_CONT)
    $default  reduce using rule 19 (PARAMETERS)

    PARAMETERS  go to state 26
    P_CONT      go to state 27


state 19

    6 VAR_DECLARATION: VAR LPAR VAR_SPEC . SEMICOLON RPAR

    SEMICOLON  shift, and go to state 28


state 20

   11 TYPE: INT .

    $default  reduce using rule 11 (TYPE)


state 21

   12 TYPE: FLOAT32 .

    $default  reduce using rule 12 (TYPE)


state 22

   13 TYPE: BOOL .

    $default  reduce using rule 13 (TYPE)


state 23

   14 TYPE: STRNG .

    $default  reduce using rule 14 (TYPE)


state 24

    7 VAR_SPEC: VS_CONT TYPE .

    $default  reduce using rule 7 (VAR_SPEC)


state 25

    8 VS_CONT: VS_CONT_CONT ID .
    9 VS_CONT_CONT: VS_CONT_CONT ID . COMMA

    COMMA  shift, and go to state 29

    $default  reduce using rule 8 (VS_CONT)


state 26

   15 FUNC_DECLARATION: FUNC ID LPAR PARAMETERS . RPAR FD_CONT FUNC_BODY

    RPAR  shift, and go to state 30


state 27

   18 PARAMETERS: P_CONT . ID TYPE
   20 P_CONT: P_CONT . ID TYPE COMMA

    ID  shift, and go to state 31


state 28

    6 VAR_DECLARATION: VAR LPAR VAR_SPEC SEMICOLON . RPAR

    RPAR  shift, and go to state 32


state 29

    9 VS_CONT_CONT: VS_CONT_CONT ID COMMA .

    $default  reduce using rule 9 (VS_CONT_CONT)


state 30

   15 FUNC_DECLARATION: FUNC ID LPAR PARAMETERS RPAR . FD_CONT FUNC_BODY

    INT      shift, and go to state 20
    FLOAT32  shift, and go to state 21
    BOOL     shift, and go to state 22
    STRNG    shift, and go to state 23

    $default  reduce using rule 17 (FD_CONT)

    TYPE     go to state 33
    FD_CONT  go to state 34


state 31

   18 PARAMETERS: P_CONT ID . TYPE
   20 P_CONT: P_CONT ID . TYPE COMMA

    INT      shift, and go to state 20
    FLOAT32  shift, and go to state 21
    BOOL     shift, and go to state 22
    STRNG    shift, and go to state 23

    TYPE  go to state 35


state 32

    6 VAR_DECLARATION: VAR LPAR VAR_SPEC SEMICOLON RPAR .

    $default  reduce using rule 6 (VAR_DECLARATION)


state 33

   16 FD_CONT: TYPE .

    $default  reduce using rule 16 (FD_CONT)


state 34

   15 FUNC_DECLARATION: FUNC ID LPAR PARAMETERS RPAR FD_CONT . FUNC_BODY

    LBRACE  shift, and go to state 36

    FUNC_BODY  go to state 37


state 35

   18 PARAMETERS: P_CONT ID TYPE .
   20 P_CONT: P_CONT ID TYPE . COMMA

    COMMA  shift, and go to state 38

    $default  reduce using rule 18 (PARAMETERS)


state 36

   22 FUNC_BODY: LBRACE . VARS_AND_STATEMENTS RBRACE

    $default  reduce using rule 24 (VARS_AND_STATEMENTS)

    VARS_AND_STATEMENTS  go to state 39


state 37

   15 FUNC_DECLARATION: FUNC ID LPAR PARAMETERS RPAR FD_CONT FUNC_BODY .

    $default  reduce using rule 15 (FUNC_DECLARATION)


state 38

   20 P_CONT: P_CONT ID TYPE COMMA .

    $default  reduce using rule 20 (P_CONT)


state 39

   22 FUNC_BODY: LBRACE VARS_AND_STATEMENTS . RBRACE
   23 VARS_AND_STATEMENTS: VARS_AND_STATEMENTS . VAS_CONT SEMICOLON

    error   shift, and go to state 40
    RETURN  shift, and go to state 41
    FOR     shift, and go to state 42
    IF      shift, and go to state 43
    VAR     shift, and go to state 8
    PRINT   shift, and go to state 44
    LBRACE  shift, and go to state 45
    RBRACE  shift, and go to state 46
    ID      shift, and go to state 47

    SEMICOLON  reduce using rule 27 (VAS_CONT)

    VAR_DECLARATION  go to state 48
    VAS_CONT         go to state 49
    STATEMENT        go to state 50
    FUNC_INVOCATION  go to state 51


state 40

   37 STATEMENT: error .

    $default  reduce using rule 37 (STATEMENT)


state 41

   32 STATEMENT: RETURN . MAYBE_EXPR

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    $default  reduce using rule 45 (MAYBE_EXPR)

    MAYBE_EXPR       go to state 59
    FUNC_INVOCATION  go to state 60
    EXPR             go to state 61


state 42

   31 STATEMENT: FOR . MAYBE_EXPR LBRACE ST_CONT RBRACE

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    $default  reduce using rule 45 (MAYBE_EXPR)

    MAYBE_EXPR       go to state 62
    FUNC_INVOCATION  go to state 60
    EXPR             go to state 61


state 43

   30 STATEMENT: IF . EXPR LBRACE ST_CONT RBRACE ST2_CONT

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    FUNC_INVOCATION  go to state 60
    EXPR             go to state 63


state 44

   36 STATEMENT: PRINT . LPAR ST3_CONT RPAR

    LPAR  shift, and go to state 64


state 45

   29 STATEMENT: LBRACE . ST_CONT RBRACE

    $default  reduce using rule 39 (ST_CONT)

    ST_CONT  go to state 65


state 46

   22 FUNC_BODY: LBRACE VARS_AND_STATEMENTS RBRACE .

    $default  reduce using rule 22 (FUNC_BODY)


state 47

   28 STATEMENT: ID . ASSIGN EXPR
   34          | ID . COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ EXPR RSQ RPAR
   35          | ID . COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR
   46 FUNC_INVOCATION: ID . LPAR MAYBE_EXPRS RPAR
   47                | ID . LPAR error RPAR

    COMMA   shift, and go to state 66
    ASSIGN  shift, and go to state 67
    LPAR    shift, and go to state 68


state 48

   25 VAS_CONT: VAR_DECLARATION .

    $default  reduce using rule 25 (VAS_CONT)


state 49

   23 VARS_AND_STATEMENTS: VARS_AND_STATEMENTS VAS_CONT . SEMICOLON

    SEMICOLON  shift, and go to state 69


state 50

   26 VAS_CONT: STATEMENT .

    $default  reduce using rule 26 (VAS_CONT)


state 51

   33 STATEMENT: FUNC_INVOCATION .

    $default  reduce using rule 33 (STATEMENT)


state 52

   65 EXPR: MINUS . EXPR

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    FUNC_INVOCATION  go to state 60
    EXPR             go to state 70


state 53

   66 EXPR: PLUS . EXPR

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    FUNC_INVOCATION  go to state 60
    EXPR             go to state 71


state 54

   72 EXPR: LPAR . EXPR RPAR
   73     | LPAR . error RPAR

    error    shift, and go to state 72
    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    FUNC_INVOCATION  go to state 60
    EXPR             go to state 73


state 55

   67 EXPR: NOT . EXPR

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    FUNC_INVOCATION  go to state 60
    EXPR             go to state 74


state 56

   69 EXPR: REALLIT .

    $default  reduce using rule 69 (EXPR)


state 57

   68 EXPR: INTLIT .

    $default  reduce using rule 68 (EXPR)


state 58

   46 FUNC_INVOCATION: ID . LPAR MAYBE_EXPRS RPAR
   47                | ID . LPAR error RPAR
   70 EXPR: ID .

    LPAR  shift, and go to state 68

    $default  reduce using rule 70 (EXPR)


state 59

   32 STATEMENT: RETURN MAYBE_EXPR .

    $default  reduce using rule 32 (STATEMENT)


state 60

   71 EXPR: FUNC_INVOCATION .

    $default  reduce using rule 71 (EXPR)


state 61

   44 MAYBE_EXPR: EXPR .
   52 EXPR: EXPR . OR EXPR
   53     | EXPR . LT EXPR
   54     | EXPR . GT EXPR
   55     | EXPR . EQ EXPR
   56     | EXPR . NE EXPR
   57     | EXPR . LE EXPR
   58     | EXPR . GE EXPR
   59     | EXPR . AND EXPR
   60     | EXPR . PLUS EXPR
   61     | EXPR . MINUS EXPR
   62     | EXPR . STAR EXPR
   63     | EXPR . DIV EXPR
   64     | EXPR . MOD EXPR

    STAR   shift, and go to state 75
    DIV    shift, and go to state 76
    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    EQ     shift, and go to state 79
    GE     shift, and go to state 80
    GT     shift, and go to state 81
    LE     shift, and go to state 82
    LT     shift, and go to state 83
    MOD    shift, and go to state 84
    NE     shift, and go to state 85
    AND    shift, and go to state 86
    OR     shift, and go to state 87

    $default  reduce using rule 44 (MAYBE_EXPR)


state 62

   31 STATEMENT: FOR MAYBE_EXPR . LBRACE ST_CONT RBRACE

    LBRACE  shift, and go to state 88


state 63

   30 STATEMENT: IF EXPR . LBRACE ST_CONT RBRACE ST2_CONT
   52 EXPR: EXPR . OR EXPR
   53     | EXPR . LT EXPR
   54     | EXPR . GT EXPR
   55     | EXPR . EQ EXPR
   56     | EXPR . NE EXPR
   57     | EXPR . LE EXPR
   58     | EXPR . GE EXPR
   59     | EXPR . AND EXPR
   60     | EXPR . PLUS EXPR
   61     | EXPR . MINUS EXPR
   62     | EXPR . STAR EXPR
   63     | EXPR . DIV EXPR
   64     | EXPR . MOD EXPR

    STAR    shift, and go to state 75
    DIV     shift, and go to state 76
    MINUS   shift, and go to state 77
    PLUS    shift, and go to state 78
    EQ      shift, and go to state 79
    GE      shift, and go to state 80
    GT      shift, and go to state 81
    LE      shift, and go to state 82
    LT      shift, and go to state 83
    LBRACE  shift, and go to state 89
    MOD     shift, and go to state 84
    NE      shift, and go to state 85
    AND     shift, and go to state 86
    OR      shift, and go to state 87


state 64

   36 STATEMENT: PRINT LPAR . ST3_CONT RPAR

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58
    STRLT    shift, and go to state 90

    ST3_CONT         go to state 91
    FUNC_INVOCATION  go to state 60
    EXPR             go to state 92


state 65

   29 STATEMENT: LBRACE ST_CONT . RBRACE
   38 ST_CONT: ST_CONT . STATEMENT SEMICOLON

    error   shift, and go to state 40
    RETURN  shift, and go to state 41
    FOR     shift, and go to state 42
    IF      shift, and go to state 43
    PRINT   shift, and go to state 44
    LBRACE  shift, and go to state 45
    RBRACE  shift, and go to state 93
    ID      shift, and go to state 47

    STATEMENT        go to state 94
    FUNC_INVOCATION  go to state 51


state 66

   34 STATEMENT: ID COMMA . BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ EXPR RSQ RPAR
   35          | ID COMMA . BLANKID ASSIGN PARSEINT LPAR error RPAR

    BLANKID  shift, and go to state 95


state 67

   28 STATEMENT: ID ASSIGN . EXPR

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    FUNC_INVOCATION  go to state 60
    EXPR             go to state 96


state 68

   46 FUNC_INVOCATION: ID LPAR . MAYBE_EXPRS RPAR
   47                | ID LPAR . error RPAR

    error  shift, and go to state 97

    MINUS    reduce using rule 51 (MORE_EXPRS)
    PLUS     reduce using rule 51 (MORE_EXPRS)
    LPAR     reduce using rule 51 (MORE_EXPRS)
    RPAR     reduce using rule 49 (MAYBE_EXPRS)
    NOT      reduce using rule 51 (MORE_EXPRS)
    REALLIT  reduce using rule 51 (MORE_EXPRS)
    INTLIT   reduce using rule 51 (MORE_EXPRS)
    ID       reduce using rule 51 (MORE_EXPRS)

    MAYBE_EXPRS  go to state 98
    MORE_EXPRS   go to state 99


state 69

   23 VARS_AND_STATEMENTS: VARS_AND_STATEMENTS VAS_CONT SEMICOLON .

    $default  reduce using rule 23 (VARS_AND_STATEMENTS)


state 70

   52 EXPR: EXPR . OR EXPR
   53     | EXPR . LT EXPR
   54     | EXPR . GT EXPR
   55     | EXPR . EQ EXPR
   56     | EXPR . NE EXPR
   57     | EXPR . LE EXPR
   58     | EXPR . GE EXPR
   59     | EXPR . AND EXPR
   60     | EXPR . PLUS EXPR
   61     | EXPR . MINUS EXPR
   62     | EXPR . STAR EXPR
   63     | EXPR . DIV EXPR
   64     | EXPR . MOD EXPR
   65     | MINUS EXPR .

    $default  reduce using rule 65 (EXPR)


state 71

   52 EXPR: EXPR . OR EXPR
   53     | EXPR . LT EXPR
   54     | EXPR . GT EXPR
   55     | EXPR . EQ EXPR
   56     | EXPR . NE EXPR
   57     | EXPR . LE EXPR
   58     | EXPR . GE EXPR
   59     | EXPR . AND EXPR
   60     | EXPR . PLUS EXPR
   61     | EXPR . MINUS EXPR
   62     | EXPR . STAR EXPR
   63     | EXPR . DIV EXPR
   64     | EXPR . MOD EXPR
   66     | PLUS EXPR .

    $default  reduce using rule 66 (EXPR)


state 72

   73 EXPR: LPAR error . RPAR

    RPAR  shift, and go to state 100


state 73

   52 EXPR: EXPR . OR EXPR
   53     | EXPR . LT EXPR
   54     | EXPR . GT EXPR
   55     | EXPR . EQ EXPR
   56     | EXPR . NE EXPR
   57     | EXPR . LE EXPR
   58     | EXPR . GE EXPR
   59     | EXPR . AND EXPR
   60     | EXPR . PLUS EXPR
   61     | EXPR . MINUS EXPR
   62     | EXPR . STAR EXPR
   63     | EXPR . DIV EXPR
   64     | EXPR . MOD EXPR
   72     | LPAR EXPR . RPAR

    STAR   shift, and go to state 75
    DIV    shift, and go to state 76
    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    EQ     shift, and go to state 79
    GE     shift, and go to state 80
    GT     shift, and go to state 81
    LE     shift, and go to state 82
    LT     shift, and go to state 83
    RPAR   shift, and go to state 101
    MOD    shift, and go to state 84
    NE     shift, and go to state 85
    AND    shift, and go to state 86
    OR     shift, and go to state 87


state 74

   52 EXPR: EXPR . OR EXPR
   53     | EXPR . LT EXPR
   54     | EXPR . GT EXPR
   55     | EXPR . EQ EXPR
   56     | EXPR . NE EXPR
   57     | EXPR . LE EXPR
   58     | EXPR . GE EXPR
   59     | EXPR . AND EXPR
   60     | EXPR . PLUS EXPR
   61     | EXPR . MINUS EXPR
   62     | EXPR . STAR EXPR
   63     | EXPR . DIV EXPR
   64     | EXPR . MOD EXPR
   67     | NOT EXPR .

    $default  reduce using rule 67 (EXPR)


state 75

   62 EXPR: EXPR STAR . EXPR

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    FUNC_INVOCATION  go to state 60
    EXPR             go to state 102


state 76

   63 EXPR: EXPR DIV . EXPR

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    FUNC_INVOCATION  go to state 60
    EXPR             go to state 103


state 77

   61 EXPR: EXPR MINUS . EXPR

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    FUNC_INVOCATION  go to state 60
    EXPR             go to state 104


state 78

   60 EXPR: EXPR PLUS . EXPR

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    FUNC_INVOCATION  go to state 60
    EXPR             go to state 105


state 79

   55 EXPR: EXPR EQ . EXPR

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    FUNC_INVOCATION  go to state 60
    EXPR             go to state 106


state 80

   58 EXPR: EXPR GE . EXPR

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    FUNC_INVOCATION  go to state 60
    EXPR             go to state 107


state 81

   54 EXPR: EXPR GT . EXPR

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    FUNC_INVOCATION  go to state 60
    EXPR             go to state 108


state 82

   57 EXPR: EXPR LE . EXPR

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    FUNC_INVOCATION  go to state 60
    EXPR             go to state 109


state 83

   53 EXPR: EXPR LT . EXPR

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    FUNC_INVOCATION  go to state 60
    EXPR             go to state 110


state 84

   64 EXPR: EXPR MOD . EXPR

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    FUNC_INVOCATION  go to state 60
    EXPR             go to state 111


state 85

   56 EXPR: EXPR NE . EXPR

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    FUNC_INVOCATION  go to state 60
    EXPR             go to state 112


state 86

   59 EXPR: EXPR AND . EXPR

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    FUNC_INVOCATION  go to state 60
    EXPR             go to state 113


state 87

   52 EXPR: EXPR OR . EXPR

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    FUNC_INVOCATION  go to state 60
    EXPR             go to state 114


state 88

   31 STATEMENT: FOR MAYBE_EXPR LBRACE . ST_CONT RBRACE

    $default  reduce using rule 39 (ST_CONT)

    ST_CONT  go to state 115


state 89

   30 STATEMENT: IF EXPR LBRACE . ST_CONT RBRACE ST2_CONT

    $default  reduce using rule 39 (ST_CONT)

    ST_CONT  go to state 116


state 90

   43 ST3_CONT: STRLT .

    $default  reduce using rule 43 (ST3_CONT)


state 91

   36 STATEMENT: PRINT LPAR ST3_CONT . RPAR

    RPAR  shift, and go to state 117


state 92

   42 ST3_CONT: EXPR .
   52 EXPR: EXPR . OR EXPR
   53     | EXPR . LT EXPR
   54     | EXPR . GT EXPR
   55     | EXPR . EQ EXPR
   56     | EXPR . NE EXPR
   57     | EXPR . LE EXPR
   58     | EXPR . GE EXPR
   59     | EXPR . AND EXPR
   60     | EXPR . PLUS EXPR
   61     | EXPR . MINUS EXPR
   62     | EXPR . STAR EXPR
   63     | EXPR . DIV EXPR
   64     | EXPR . MOD EXPR

    STAR   shift, and go to state 75
    DIV    shift, and go to state 76
    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    EQ     shift, and go to state 79
    GE     shift, and go to state 80
    GT     shift, and go to state 81
    LE     shift, and go to state 82
    LT     shift, and go to state 83
    MOD    shift, and go to state 84
    NE     shift, and go to state 85
    AND    shift, and go to state 86
    OR     shift, and go to state 87

    $default  reduce using rule 42 (ST3_CONT)


state 93

   29 STATEMENT: LBRACE ST_CONT RBRACE .

    $default  reduce using rule 29 (STATEMENT)


state 94

   38 ST_CONT: ST_CONT STATEMENT . SEMICOLON

    SEMICOLON  shift, and go to state 118


state 95

   34 STATEMENT: ID COMMA BLANKID . ASSIGN PARSEINT LPAR CMDARGS LSQ EXPR RSQ RPAR
   35          | ID COMMA BLANKID . ASSIGN PARSEINT LPAR error RPAR

    ASSIGN  shift, and go to state 119


state 96

   28 STATEMENT: ID ASSIGN EXPR .
   52 EXPR: EXPR . OR EXPR
   53     | EXPR . LT EXPR
   54     | EXPR . GT EXPR
   55     | EXPR . EQ EXPR
   56     | EXPR . NE EXPR
   57     | EXPR . LE EXPR
   58     | EXPR . GE EXPR
   59     | EXPR . AND EXPR
   60     | EXPR . PLUS EXPR
   61     | EXPR . MINUS EXPR
   62     | EXPR . STAR EXPR
   63     | EXPR . DIV EXPR
   64     | EXPR . MOD EXPR

    STAR   shift, and go to state 75
    DIV    shift, and go to state 76
    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    EQ     shift, and go to state 79
    GE     shift, and go to state 80
    GT     shift, and go to state 81
    LE     shift, and go to state 82
    LT     shift, and go to state 83
    MOD    shift, and go to state 84
    NE     shift, and go to state 85
    AND    shift, and go to state 86
    OR     shift, and go to state 87

    $default  reduce using rule 28 (STATEMENT)


state 97

   47 FUNC_INVOCATION: ID LPAR error . RPAR

    RPAR  shift, and go to state 120


state 98

   46 FUNC_INVOCATION: ID LPAR MAYBE_EXPRS . RPAR

    RPAR  shift, and go to state 121


state 99

   48 MAYBE_EXPRS: MORE_EXPRS . EXPR
   50 MORE_EXPRS: MORE_EXPRS . EXPR COMMA

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    FUNC_INVOCATION  go to state 60
    EXPR             go to state 122


state 100

   73 EXPR: LPAR error RPAR .

    $default  reduce using rule 73 (EXPR)


state 101

   72 EXPR: LPAR EXPR RPAR .

    $default  reduce using rule 72 (EXPR)


state 102

   52 EXPR: EXPR . OR EXPR
   53     | EXPR . LT EXPR
   54     | EXPR . GT EXPR
   55     | EXPR . EQ EXPR
   56     | EXPR . NE EXPR
   57     | EXPR . LE EXPR
   58     | EXPR . GE EXPR
   59     | EXPR . AND EXPR
   60     | EXPR . PLUS EXPR
   61     | EXPR . MINUS EXPR
   62     | EXPR . STAR EXPR
   62     | EXPR STAR EXPR .
   63     | EXPR . DIV EXPR
   64     | EXPR . MOD EXPR

    $default  reduce using rule 62 (EXPR)


state 103

   52 EXPR: EXPR . OR EXPR
   53     | EXPR . LT EXPR
   54     | EXPR . GT EXPR
   55     | EXPR . EQ EXPR
   56     | EXPR . NE EXPR
   57     | EXPR . LE EXPR
   58     | EXPR . GE EXPR
   59     | EXPR . AND EXPR
   60     | EXPR . PLUS EXPR
   61     | EXPR . MINUS EXPR
   62     | EXPR . STAR EXPR
   63     | EXPR . DIV EXPR
   63     | EXPR DIV EXPR .
   64     | EXPR . MOD EXPR

    $default  reduce using rule 63 (EXPR)


state 104

   52 EXPR: EXPR . OR EXPR
   53     | EXPR . LT EXPR
   54     | EXPR . GT EXPR
   55     | EXPR . EQ EXPR
   56     | EXPR . NE EXPR
   57     | EXPR . LE EXPR
   58     | EXPR . GE EXPR
   59     | EXPR . AND EXPR
   60     | EXPR . PLUS EXPR
   61     | EXPR . MINUS EXPR
   61     | EXPR MINUS EXPR .
   62     | EXPR . STAR EXPR
   63     | EXPR . DIV EXPR
   64     | EXPR . MOD EXPR

    STAR  shift, and go to state 75
    DIV   shift, and go to state 76
    MOD   shift, and go to state 84

    $default  reduce using rule 61 (EXPR)


state 105

   52 EXPR: EXPR . OR EXPR
   53     | EXPR . LT EXPR
   54     | EXPR . GT EXPR
   55     | EXPR . EQ EXPR
   56     | EXPR . NE EXPR
   57     | EXPR . LE EXPR
   58     | EXPR . GE EXPR
   59     | EXPR . AND EXPR
   60     | EXPR . PLUS EXPR
   60     | EXPR PLUS EXPR .
   61     | EXPR . MINUS EXPR
   62     | EXPR . STAR EXPR
   63     | EXPR . DIV EXPR
   64     | EXPR . MOD EXPR

    STAR  shift, and go to state 75
    DIV   shift, and go to state 76
    MOD   shift, and go to state 84

    $default  reduce using rule 60 (EXPR)


state 106

   52 EXPR: EXPR . OR EXPR
   53     | EXPR . LT EXPR
   54     | EXPR . GT EXPR
   55     | EXPR . EQ EXPR
   55     | EXPR EQ EXPR .
   56     | EXPR . NE EXPR
   57     | EXPR . LE EXPR
   58     | EXPR . GE EXPR
   59     | EXPR . AND EXPR
   60     | EXPR . PLUS EXPR
   61     | EXPR . MINUS EXPR
   62     | EXPR . STAR EXPR
   63     | EXPR . DIV EXPR
   64     | EXPR . MOD EXPR

    STAR   shift, and go to state 75
    DIV    shift, and go to state 76
    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    MOD    shift, and go to state 84

    $default  reduce using rule 55 (EXPR)


state 107

   52 EXPR: EXPR . OR EXPR
   53     | EXPR . LT EXPR
   54     | EXPR . GT EXPR
   55     | EXPR . EQ EXPR
   56     | EXPR . NE EXPR
   57     | EXPR . LE EXPR
   58     | EXPR . GE EXPR
   58     | EXPR GE EXPR .
   59     | EXPR . AND EXPR
   60     | EXPR . PLUS EXPR
   61     | EXPR . MINUS EXPR
   62     | EXPR . STAR EXPR
   63     | EXPR . DIV EXPR
   64     | EXPR . MOD EXPR

    STAR   shift, and go to state 75
    DIV    shift, and go to state 76
    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    MOD    shift, and go to state 84

    $default  reduce using rule 58 (EXPR)


state 108

   52 EXPR: EXPR . OR EXPR
   53     | EXPR . LT EXPR
   54     | EXPR . GT EXPR
   54     | EXPR GT EXPR .
   55     | EXPR . EQ EXPR
   56     | EXPR . NE EXPR
   57     | EXPR . LE EXPR
   58     | EXPR . GE EXPR
   59     | EXPR . AND EXPR
   60     | EXPR . PLUS EXPR
   61     | EXPR . MINUS EXPR
   62     | EXPR . STAR EXPR
   63     | EXPR . DIV EXPR
   64     | EXPR . MOD EXPR

    STAR   shift, and go to state 75
    DIV    shift, and go to state 76
    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    MOD    shift, and go to state 84

    $default  reduce using rule 54 (EXPR)


state 109

   52 EXPR: EXPR . OR EXPR
   53     | EXPR . LT EXPR
   54     | EXPR . GT EXPR
   55     | EXPR . EQ EXPR
   56     | EXPR . NE EXPR
   57     | EXPR . LE EXPR
   57     | EXPR LE EXPR .
   58     | EXPR . GE EXPR
   59     | EXPR . AND EXPR
   60     | EXPR . PLUS EXPR
   61     | EXPR . MINUS EXPR
   62     | EXPR . STAR EXPR
   63     | EXPR . DIV EXPR
   64     | EXPR . MOD EXPR

    STAR   shift, and go to state 75
    DIV    shift, and go to state 76
    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    MOD    shift, and go to state 84

    $default  reduce using rule 57 (EXPR)


state 110

   52 EXPR: EXPR . OR EXPR
   53     | EXPR . LT EXPR
   53     | EXPR LT EXPR .
   54     | EXPR . GT EXPR
   55     | EXPR . EQ EXPR
   56     | EXPR . NE EXPR
   57     | EXPR . LE EXPR
   58     | EXPR . GE EXPR
   59     | EXPR . AND EXPR
   60     | EXPR . PLUS EXPR
   61     | EXPR . MINUS EXPR
   62     | EXPR . STAR EXPR
   63     | EXPR . DIV EXPR
   64     | EXPR . MOD EXPR

    STAR   shift, and go to state 75
    DIV    shift, and go to state 76
    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    MOD    shift, and go to state 84

    $default  reduce using rule 53 (EXPR)


state 111

   52 EXPR: EXPR . OR EXPR
   53     | EXPR . LT EXPR
   54     | EXPR . GT EXPR
   55     | EXPR . EQ EXPR
   56     | EXPR . NE EXPR
   57     | EXPR . LE EXPR
   58     | EXPR . GE EXPR
   59     | EXPR . AND EXPR
   60     | EXPR . PLUS EXPR
   61     | EXPR . MINUS EXPR
   62     | EXPR . STAR EXPR
   63     | EXPR . DIV EXPR
   64     | EXPR . MOD EXPR
   64     | EXPR MOD EXPR .

    $default  reduce using rule 64 (EXPR)


state 112

   52 EXPR: EXPR . OR EXPR
   53     | EXPR . LT EXPR
   54     | EXPR . GT EXPR
   55     | EXPR . EQ EXPR
   56     | EXPR . NE EXPR
   56     | EXPR NE EXPR .
   57     | EXPR . LE EXPR
   58     | EXPR . GE EXPR
   59     | EXPR . AND EXPR
   60     | EXPR . PLUS EXPR
   61     | EXPR . MINUS EXPR
   62     | EXPR . STAR EXPR
   63     | EXPR . DIV EXPR
   64     | EXPR . MOD EXPR

    STAR   shift, and go to state 75
    DIV    shift, and go to state 76
    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    MOD    shift, and go to state 84

    $default  reduce using rule 56 (EXPR)


state 113

   52 EXPR: EXPR . OR EXPR
   53     | EXPR . LT EXPR
   54     | EXPR . GT EXPR
   55     | EXPR . EQ EXPR
   56     | EXPR . NE EXPR
   57     | EXPR . LE EXPR
   58     | EXPR . GE EXPR
   59     | EXPR . AND EXPR
   59     | EXPR AND EXPR .
   60     | EXPR . PLUS EXPR
   61     | EXPR . MINUS EXPR
   62     | EXPR . STAR EXPR
   63     | EXPR . DIV EXPR
   64     | EXPR . MOD EXPR

    STAR   shift, and go to state 75
    DIV    shift, and go to state 76
    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    EQ     shift, and go to state 79
    GE     shift, and go to state 80
    GT     shift, and go to state 81
    LE     shift, and go to state 82
    LT     shift, and go to state 83
    MOD    shift, and go to state 84
    NE     shift, and go to state 85

    $default  reduce using rule 59 (EXPR)


state 114

   52 EXPR: EXPR . OR EXPR
   52     | EXPR OR EXPR .
   53     | EXPR . LT EXPR
   54     | EXPR . GT EXPR
   55     | EXPR . EQ EXPR
   56     | EXPR . NE EXPR
   57     | EXPR . LE EXPR
   58     | EXPR . GE EXPR
   59     | EXPR . AND EXPR
   60     | EXPR . PLUS EXPR
   61     | EXPR . MINUS EXPR
   62     | EXPR . STAR EXPR
   63     | EXPR . DIV EXPR
   64     | EXPR . MOD EXPR

    STAR   shift, and go to state 75
    DIV    shift, and go to state 76
    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    EQ     shift, and go to state 79
    GE     shift, and go to state 80
    GT     shift, and go to state 81
    LE     shift, and go to state 82
    LT     shift, and go to state 83
    MOD    shift, and go to state 84
    NE     shift, and go to state 85
    AND    shift, and go to state 86

    $default  reduce using rule 52 (EXPR)


state 115

   31 STATEMENT: FOR MAYBE_EXPR LBRACE ST_CONT . RBRACE
   38 ST_CONT: ST_CONT . STATEMENT SEMICOLON

    error   shift, and go to state 40
    RETURN  shift, and go to state 41
    FOR     shift, and go to state 42
    IF      shift, and go to state 43
    PRINT   shift, and go to state 44
    LBRACE  shift, and go to state 45
    RBRACE  shift, and go to state 123
    ID      shift, and go to state 47

    STATEMENT        go to state 94
    FUNC_INVOCATION  go to state 51


state 116

   30 STATEMENT: IF EXPR LBRACE ST_CONT . RBRACE ST2_CONT
   38 ST_CONT: ST_CONT . STATEMENT SEMICOLON

    error   shift, and go to state 40
    RETURN  shift, and go to state 41
    FOR     shift, and go to state 42
    IF      shift, and go to state 43
    PRINT   shift, and go to state 44
    LBRACE  shift, and go to state 45
    RBRACE  shift, and go to state 124
    ID      shift, and go to state 47

    STATEMENT        go to state 94
    FUNC_INVOCATION  go to state 51


state 117

   36 STATEMENT: PRINT LPAR ST3_CONT RPAR .

    $default  reduce using rule 36 (STATEMENT)


state 118

   38 ST_CONT: ST_CONT STATEMENT SEMICOLON .

    $default  reduce using rule 38 (ST_CONT)


state 119

   34 STATEMENT: ID COMMA BLANKID ASSIGN . PARSEINT LPAR CMDARGS LSQ EXPR RSQ RPAR
   35          | ID COMMA BLANKID ASSIGN . PARSEINT LPAR error RPAR

    PARSEINT  shift, and go to state 125


state 120

   47 FUNC_INVOCATION: ID LPAR error RPAR .

    $default  reduce using rule 47 (FUNC_INVOCATION)


state 121

   46 FUNC_INVOCATION: ID LPAR MAYBE_EXPRS RPAR .

    $default  reduce using rule 46 (FUNC_INVOCATION)


state 122

   48 MAYBE_EXPRS: MORE_EXPRS EXPR .
   50 MORE_EXPRS: MORE_EXPRS EXPR . COMMA
   52 EXPR: EXPR . OR EXPR
   53     | EXPR . LT EXPR
   54     | EXPR . GT EXPR
   55     | EXPR . EQ EXPR
   56     | EXPR . NE EXPR
   57     | EXPR . LE EXPR
   58     | EXPR . GE EXPR
   59     | EXPR . AND EXPR
   60     | EXPR . PLUS EXPR
   61     | EXPR . MINUS EXPR
   62     | EXPR . STAR EXPR
   63     | EXPR . DIV EXPR
   64     | EXPR . MOD EXPR

    COMMA  shift, and go to state 126
    STAR   shift, and go to state 75
    DIV    shift, and go to state 76
    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    EQ     shift, and go to state 79
    GE     shift, and go to state 80
    GT     shift, and go to state 81
    LE     shift, and go to state 82
    LT     shift, and go to state 83
    MOD    shift, and go to state 84
    NE     shift, and go to state 85
    AND    shift, and go to state 86
    OR     shift, and go to state 87

    $default  reduce using rule 48 (MAYBE_EXPRS)


state 123

   31 STATEMENT: FOR MAYBE_EXPR LBRACE ST_CONT RBRACE .

    $default  reduce using rule 31 (STATEMENT)


state 124

   30 STATEMENT: IF EXPR LBRACE ST_CONT RBRACE . ST2_CONT

    ELSE  shift, and go to state 127

    $default  reduce using rule 41 (ST2_CONT)

    ST2_CONT  go to state 128


state 125

   34 STATEMENT: ID COMMA BLANKID ASSIGN PARSEINT . LPAR CMDARGS LSQ EXPR RSQ RPAR
   35          | ID COMMA BLANKID ASSIGN PARSEINT . LPAR error RPAR

    LPAR  shift, and go to state 129


state 126

   50 MORE_EXPRS: MORE_EXPRS EXPR COMMA .

    $default  reduce using rule 50 (MORE_EXPRS)


state 127

   40 ST2_CONT: ELSE . LBRACE ST_CONT RBRACE

    LBRACE  shift, and go to state 130


state 128

   30 STATEMENT: IF EXPR LBRACE ST_CONT RBRACE ST2_CONT .

    $default  reduce using rule 30 (STATEMENT)


state 129

   34 STATEMENT: ID COMMA BLANKID ASSIGN PARSEINT LPAR . CMDARGS LSQ EXPR RSQ RPAR
   35          | ID COMMA BLANKID ASSIGN PARSEINT LPAR . error RPAR

    error    shift, and go to state 131
    CMDARGS  shift, and go to state 132


state 130

   40 ST2_CONT: ELSE LBRACE . ST_CONT RBRACE

    $default  reduce using rule 39 (ST_CONT)

    ST_CONT  go to state 133


state 131

   35 STATEMENT: ID COMMA BLANKID ASSIGN PARSEINT LPAR error . RPAR

    RPAR  shift, and go to state 134


state 132

   34 STATEMENT: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS . LSQ EXPR RSQ RPAR

    LSQ  shift, and go to state 135


state 133

   38 ST_CONT: ST_CONT . STATEMENT SEMICOLON
   40 ST2_CONT: ELSE LBRACE ST_CONT . RBRACE

    error   shift, and go to state 40
    RETURN  shift, and go to state 41
    FOR     shift, and go to state 42
    IF      shift, and go to state 43
    PRINT   shift, and go to state 44
    LBRACE  shift, and go to state 45
    RBRACE  shift, and go to state 136
    ID      shift, and go to state 47

    STATEMENT        go to state 94
    FUNC_INVOCATION  go to state 51


state 134

   35 STATEMENT: ID COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR .

    $default  reduce using rule 35 (STATEMENT)


state 135

   34 STATEMENT: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ . EXPR RSQ RPAR

    MINUS    shift, and go to state 52
    PLUS     shift, and go to state 53
    LPAR     shift, and go to state 54
    NOT      shift, and go to state 55
    REALLIT  shift, and go to state 56
    INTLIT   shift, and go to state 57
    ID       shift, and go to state 58

    FUNC_INVOCATION  go to state 60
    EXPR             go to state 137


state 136

   40 ST2_CONT: ELSE LBRACE ST_CONT RBRACE .

    $default  reduce using rule 40 (ST2_CONT)


state 137

   34 STATEMENT: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ EXPR . RSQ RPAR
   52 EXPR: EXPR . OR EXPR
   53     | EXPR . LT EXPR
   54     | EXPR . GT EXPR
   55     | EXPR . EQ EXPR
   56     | EXPR . NE EXPR
   57     | EXPR . LE EXPR
   58     | EXPR . GE EXPR
   59     | EXPR . AND EXPR
   60     | EXPR . PLUS EXPR
   61     | EXPR . MINUS EXPR
   62     | EXPR . STAR EXPR
   63     | EXPR . DIV EXPR
   64     | EXPR . MOD EXPR

    STAR   shift, and go to state 75
    DIV    shift, and go to state 76
    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    EQ     shift, and go to state 79
    GE     shift, and go to state 80
    GT     shift, and go to state 81
    LE     shift, and go to state 82
    LT     shift, and go to state 83
    RSQ    shift, and go to state 138
    MOD    shift, and go to state 84
    NE     shift, and go to state 85
    AND    shift, and go to state 86
    OR     shift, and go to state 87


state 138

   34 STATEMENT: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ EXPR RSQ . RPAR

    RPAR  shift, and go to state 139


state 139

   34 STATEMENT: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ EXPR RSQ RPAR .

    $default  reduce using rule 34 (STATEMENT)
